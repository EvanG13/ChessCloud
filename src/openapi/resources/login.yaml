post:
  summary: Login to the system
  description: Logs a user into the system, providing a session token.
  x-amazon-apigateway-integration:
    type: "aws_proxy"
    httpMethod: "POST"
    uri: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:login/invocations"
    default:
      statusCode: "200"
      responseParameters:
        method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
        method.response.header.Access-Control-Allow-Methods: "'POST'"
        method.response.header.Access-Control-Allow-Origin: "'*'"
  #        http://localhost:8081/
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../schemas/requests/LoginRequestBody.yaml'
  responses:
    200:
      description: Login successful
      content:
        application/json:
          schema:
            $ref: '../schemas/responses/LoginResponse.yaml'
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: "string"
        Access-Control-Allow-Methods:
          schema:
            type: "string"
        Access-Control-Allow-Headers:
          schema:
            type: "string"
    400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '../schemas/responses/BadRequest.yaml'
    401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '../schemas/responses/Unauthorized.yaml'