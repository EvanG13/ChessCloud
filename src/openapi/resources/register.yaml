post:
  summary: Register to the system
  description: Registers a user into the system, providing a session token.
  x-amazon-apigateway-integration:
    type: "aws_proxy"
    httpMethod: "POST"
    uri: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:register/invocations"
    default:
      statusCode: "200"
      responseParameters:
        method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
        method.response.header.Access-Control-Allow-Methods: "'POST,OPTIONS'"
        method.response.header.Access-Control-Allow-Origin: "'*'"
      responseTemplates:
        application/json: { }
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../schemas/requests/RegisterRequestBody.yaml'
  responses:
    200:
      $ref: '../schemas/responses/Responses.yaml#/components/responses/200'
    400:
      $ref: '../schemas/responses/Responses.yaml#/components/responses/400'
    409:
      $ref: '../schemas/responses/Responses.yaml#/components/responses/409'
options:
  summary: CORS support
  description: Enable CORS by returning correct headers
  tags:
    - CORS
  x-amazon-apigateway-integration:
    type: "mock"
    requestTemplates:
      application/json: "{\"statusCode\": 200}"
    responses:
      default:
        statusCode: "200"
        responseParameters:
          method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
          method.response.header.Access-Control-Allow-Methods: "'POST,OPTIONS'"
          method.response.header.Access-Control-Allow-Origin: "'*'"
          responseTemplates:
            application/json: { }
  responses:
    "200":
      description: Default response for CORS method
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: "string"
        Access-Control-Allow-Methods:
          schema:
            type: "string"
        Access-Control-Allow-Headers:
          schema:
            type: "string"
      content: { }