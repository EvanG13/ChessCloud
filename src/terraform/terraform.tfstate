{
  "version": 4,
  "terraform_version": "1.9.4",
  "serial": 1987,
  "lineage": "2358f90d-604f-5fa9-5f28-fc15441c7608",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "aws_api_gateway_deployment",
      "name": "dev_deployment",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "canary_settings": [],
            "created_date": "2024-09-07T23:17:07Z",
            "description": "",
            "execution_arn": "arn:aws:execute-api:us-east-1:891377152062:y6xko0b5hj/",
            "id": "5d6t6a",
            "invoke_url": "https://y6xko0b5hj.execute-api.us-east-1.amazonaws.com/",
            "rest_api_id": "y6xko0b5hj",
            "stage_description": null,
            "stage_name": null,
            "triggers": {
              "redeployment": "cb3fea7084e564ba21b5e62c4c2e0d4e3cf2d1ca"
            },
            "variables": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_rest_api.rest_api"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_rest_api",
      "name": "rest_api",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_source": "HEADER",
            "arn": "arn:aws:apigateway:us-east-1::/restapis/y6xko0b5hj",
            "binary_media_types": [],
            "body": "openapi: 3.0.0\ninfo:\n  title: Chess Cloud API\n  description: API for our React-Nave mobile app\n  version: 1.0.0\nservers:\n- url: /\npaths:\n  /login:\n    post:\n      summary: Login to the system\n      description: \"Logs a user into the system, providing a session token.\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LoginRequestBody'\n        required: true\n      responses:\n        \"200\":\n          description: Login successful\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoginResponse'\n        \"400\":\n          description: Bad Request\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n        \"401\":\n          description: Unauthorized\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Unauthorized'\n      x-amazon-apigateway-integration:\n        type: aws_proxy\n        httpMethod: POST\n        uri: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:login/invocations\"\n        default:\n          statusCode: \"200\"\n          responseParameters:\n            method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key'\"\n            method.response.header.Access-Control-Allow-Methods: \"'POST,OPTIONS'\"\n            method.response.header.Access-Control-Allow-Origin: '''*'''\n          responseTemplates:\n            application/json: {}\n    options:\n      tags:\n      - CORS\n      summary: CORS support\n      description: Enable CORS by returning correct headers\n      responses:\n        \"200\":\n          description: Default response for CORS method\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n          content: {}\n      x-amazon-apigateway-integration:\n        type: mock\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key'\"\n              method.response.header.Access-Control-Allow-Methods: \"'POST,OPTIONS'\"\n              method.response.header.Access-Control-Allow-Origin: '''*'''\n              responseTemplates:\n                application/json: {}\n  /logout:\n    post:\n      summary: Logout\n      description: Logout of the app\n      parameters:\n      - name: Authorization\n        in: header\n        description: session token\n        required: true\n        schema:\n          type: string\n      - name: userId\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Logout Successful\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OKResponse'\n        \"400\":\n          description: Bad Request\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n      security:\n      - bearerAuth: []\n      x-amazon-apigateway-integration:\n        type: aws_proxy\n        httpMethod: POST\n        uri: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:logout/invocations\"\n    options:\n      tags:\n      - CORS\n      summary: CORS support\n      description: Enable CORS by returning correct headers\n      responses:\n        \"200\":\n          description: Default response for CORS method\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n          content: {}\n      x-amazon-apigateway-integration:\n        type: mock\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key'\"\n              method.response.header.Access-Control-Allow-Methods: \"'POST,OPTIONS'\"\n              method.response.header.Access-Control-Allow-Origin: '''*'''\n              responseTemplates:\n                application/json: {}\n  /register:\n    post:\n      summary: Register to the system\n      description: \"Registers a user into the system, providing a session token.\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterRequestBody'\n        required: true\n      responses:\n        \"200\":\n          description: Registration successful\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OKResponse'\n        \"400\":\n          description: Bad Request\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BadRequest'\n        \"409\":\n          description: Conflict\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Conflict'\n      x-amazon-apigateway-integration:\n        type: aws_proxy\n        httpMethod: POST\n        uri: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:register/invocations\"\n        default:\n          statusCode: \"200\"\n          responseParameters:\n            method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key'\"\n            method.response.header.Access-Control-Allow-Methods: \"'POST,OPTIONS'\"\n            method.response.header.Access-Control-Allow-Origin: '''*'''\n          responseTemplates:\n            application/json: {}\n    options:\n      tags:\n      - CORS\n      summary: CORS support\n      description: Enable CORS by returning correct headers\n      responses:\n        \"200\":\n          description: Default response for CORS method\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n          content: {}\n      x-amazon-apigateway-integration:\n        type: mock\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key'\"\n              method.response.header.Access-Control-Allow-Methods: \"'POST,OPTIONS'\"\n              method.response.header.Access-Control-Allow-Origin: '''*'''\n              responseTemplates:\n                application/json: {}\n  /stats:\n    post:\n      summary: stats\n      description: get win/loss/draw\n      parameters:\n      - name: Authorization\n        in: header\n        description: session token\n        required: true\n        schema:\n          type: string\n      - name: userId\n        in: header\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Post Stats Successful\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatsResponse'\n      security:\n      - bearerAuth: []\n      x-amazon-apigateway-integration:\n        type: aws_proxy\n        httpMethod: POST\n        uri: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:stats/invocations\"\n    options:\n      tags:\n      - CORS\n      summary: CORS support\n      description: Enable CORS by returning correct headers\n      responses:\n        \"200\":\n          description: Default response for CORS method\n          headers:\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n          content: {}\n      x-amazon-apigateway-integration:\n        type: mock\n        requestTemplates:\n          application/json: \"{\\\"statusCode\\\": 200}\"\n        responses:\n          default:\n            statusCode: \"200\"\n            responseParameters:\n              method.response.header.Access-Control-Allow-Headers: \"'Content-Type,X-Amz-Date,Authorization,X-Api-Key'\"\n              method.response.header.Access-Control-Allow-Methods: \"'POST,OPTIONS'\"\n              method.response.header.Access-Control-Allow-Origin: '''*'''\n              responseTemplates:\n                application/json: {}\ncomponents:\n  schemas:\n    LoginRequestBody:\n      required:\n      - email\n      - password\n      type: object\n      properties:\n        email:\n          type: string\n          description: The user's email address\n          format: email\n        password:\n          type: string\n          description: The user's password\n    LoginResponse:\n      type: object\n      properties:\n        token:\n          type: string\n          example: 9dd1561d-e3ea-419b-a394-5ca2fbad058b\n        user:\n          $ref: '#/components/schemas/User'\n    BadRequest:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Bad Request\n    Unauthorized:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Unauthorized\n    OKResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          example: OK\n    RegisterRequestBody:\n      required:\n      - email\n      - password\n      - username\n      type: object\n      properties:\n        email:\n          type: string\n          description: The user's email address\n          format: email\n        username:\n          type: string\n          description: User's username(non-unique)\n        password:\n          type: string\n          description: The user's password\n    Conflict:\n      type: object\n      properties:\n        message:\n          type: string\n          example: Conflict\n    StatsResponse:\n      type: object\n      properties:\n        gamesWon:\n          type: integer\n          example: 0\n        gamesLost:\n          type: integer\n          example: 8\n        gamesDrawn:\n          type: integer\n          example: 0\n    User:\n      type: object\n      properties:\n        id:\n          type: string\n          example: foo-id\n        email:\n          type: string\n          example: fake@gmail.com\n        username:\n          type: string\n          example: foo-username\n  parameters:\n    authHeader:\n      name: Authorization\n      in: header\n      description: session token\n      required: true\n      schema:\n        type: string\n    userId:\n      name: userId\n      in: header\n      required: true\n      schema:\n        type: string\n  securitySchemes:\n    bearerAuth:\n      type: apiKey\n      name: Unused\n      in: header\n      scheme: bearer\n      bearerFormat: Session Token\n      x-amazon-apigateway-authtype: custom\n      x-amazon-apigateway-authorizer:\n        type: REQUEST\n        authorizerUri: \"arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:auth/invocations\"\n        identityValidationExpression: \"^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$\"\n        authorizerResultTtlInSeconds: 300\n        identitySource: \"method.request.header.Authorization,method.request.header.userId\"\n",
            "created_date": "2024-08-25T23:25:27Z",
            "description": "API for our React-Nave mobile app",
            "disable_execute_api_endpoint": false,
            "endpoint_configuration": [
              {
                "types": [
                  "EDGE"
                ],
                "vpc_endpoint_ids": []
              }
            ],
            "execution_arn": "arn:aws:execute-api:us-east-1:891377152062:y6xko0b5hj",
            "fail_on_warnings": null,
            "id": "y6xko0b5hj",
            "minimum_compression_size": "",
            "name": "chess-rest-api",
            "parameters": null,
            "policy": "",
            "put_rest_api_mode": null,
            "root_resource_id": "zcrfk9iv3f",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_stage",
      "name": "dev",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_log_settings": [],
            "arn": "arn:aws:apigateway:us-east-1::/restapis/y6xko0b5hj/stages/dev",
            "cache_cluster_enabled": false,
            "cache_cluster_size": "",
            "canary_settings": [],
            "client_certificate_id": "",
            "deployment_id": "5d6t6a",
            "description": "",
            "documentation_version": "",
            "execution_arn": "arn:aws:execute-api:us-east-1:891377152062:y6xko0b5hj/dev",
            "id": "ags-y6xko0b5hj-dev",
            "invoke_url": "https://y6xko0b5hj.execute-api.us-east-1.amazonaws.com/dev",
            "rest_api_id": "y6xko0b5hj",
            "stage_name": "dev",
            "tags": {},
            "tags_all": {},
            "variables": {},
            "web_acl_arn": "",
            "xray_tracing_enabled": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_deployment.dev_deployment",
            "aws_api_gateway_rest_api.rest_api"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_usage_plan",
      "name": "usage_plan",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_stages": [
              {
                "api_id": "y6xko0b5hj",
                "stage": "dev",
                "throttle": []
              }
            ],
            "arn": "arn:aws:apigateway:us-east-1::/usageplans/9dyct8",
            "description": "",
            "id": "9dyct8",
            "name": "usage-plan",
            "product_code": "",
            "quota_settings": [],
            "tags": {},
            "tags_all": {},
            "throttle_settings": [
              {
                "burst_limit": 5,
                "rate_limit": 5
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_deployment.dev_deployment",
            "aws_api_gateway_rest_api.rest_api",
            "aws_api_gateway_stage.dev"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_apigatewayv2_api",
      "name": "chess-websocket",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_endpoint": "wss://b1bgyojlzj.execute-api.us-east-1.amazonaws.com",
            "api_key_selection_expression": "$request.header.x-api-key",
            "arn": "arn:aws:apigateway:us-east-1::/apis/b1bgyojlzj",
            "body": null,
            "cors_configuration": [],
            "credentials_arn": null,
            "description": "",
            "disable_execute_api_endpoint": false,
            "execution_arn": "arn:aws:execute-api:us-east-1:891377152062:b1bgyojlzj",
            "fail_on_warnings": null,
            "id": "b1bgyojlzj",
            "name": "chess-websocket-api",
            "protocol_type": "WEBSOCKET",
            "route_key": null,
            "route_selection_expression": "$request.body.action",
            "tags": {},
            "tags_all": {},
            "target": null,
            "version": ""
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_apigatewayv2_deployment",
      "name": "websocket-deployment",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_id": "b1bgyojlzj",
            "auto_deployed": false,
            "description": "",
            "id": "361mu7",
            "triggers": {
              "redeployment": "362fa5926bca2ae7c3653643282a40f190e07d74"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket",
            "aws_apigatewayv2_integration.connect-integration",
            "aws_apigatewayv2_integration.integrations",
            "aws_apigatewayv2_route.connect-route",
            "aws_apigatewayv2_route.routes",
            "aws_iam_role.iam_role_for_lambda",
            "aws_lambda_function.websocket_connect_lambda",
            "aws_lambda_function.websocket_lambda_functions",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_apigatewayv2_integration",
      "name": "connect-integration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_id": "b1bgyojlzj",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling_strategy": "",
            "credentials_arn": "",
            "description": "integration between $connect route and connect lambda",
            "id": "1o1r01p",
            "integration_method": "POST",
            "integration_response_selection_expression": "",
            "integration_subtype": "",
            "integration_type": "AWS_PROXY",
            "integration_uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:connect/invocations",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "payload_format_version": "1.0",
            "request_parameters": {},
            "request_templates": {},
            "response_parameters": [],
            "template_selection_expression": "",
            "timeout_milliseconds": 29000,
            "tls_config": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket",
            "aws_iam_role.iam_role_for_lambda",
            "aws_lambda_function.websocket_connect_lambda",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_apigatewayv2_integration",
      "name": "integrations",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "default",
          "schema_version": 0,
          "attributes": {
            "api_id": "b1bgyojlzj",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling_strategy": "",
            "credentials_arn": "",
            "description": "Lambda example",
            "id": "b6tv2d1",
            "integration_method": "POST",
            "integration_response_selection_expression": "",
            "integration_subtype": "",
            "integration_type": "AWS_PROXY",
            "integration_uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:default/invocations",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "payload_format_version": "1.0",
            "request_parameters": {},
            "request_templates": {},
            "response_parameters": [],
            "template_selection_expression": "",
            "timeout_milliseconds": 29000,
            "tls_config": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket",
            "aws_iam_role.iam_role_for_lambda",
            "aws_lambda_function.websocket_lambda_functions",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "disconnect",
          "schema_version": 0,
          "attributes": {
            "api_id": "b1bgyojlzj",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling_strategy": "",
            "credentials_arn": "",
            "description": "Lambda example",
            "id": "ddikkb5",
            "integration_method": "POST",
            "integration_response_selection_expression": "",
            "integration_subtype": "",
            "integration_type": "AWS_PROXY",
            "integration_uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:disconnect/invocations",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "payload_format_version": "1.0",
            "request_parameters": {},
            "request_templates": {},
            "response_parameters": [],
            "template_selection_expression": "",
            "timeout_milliseconds": 29000,
            "tls_config": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket",
            "aws_iam_role.iam_role_for_lambda",
            "aws_lambda_function.websocket_lambda_functions",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "joinGame",
          "schema_version": 0,
          "attributes": {
            "api_id": "b1bgyojlzj",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling_strategy": "",
            "credentials_arn": "",
            "description": "Lambda example",
            "id": "lry00uh",
            "integration_method": "POST",
            "integration_response_selection_expression": "",
            "integration_subtype": "",
            "integration_type": "AWS_PROXY",
            "integration_uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:joinGame/invocations",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "payload_format_version": "1.0",
            "request_parameters": {},
            "request_templates": {},
            "response_parameters": [],
            "template_selection_expression": "",
            "timeout_milliseconds": 29000,
            "tls_config": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket",
            "aws_iam_role.iam_role_for_lambda",
            "aws_lambda_function.websocket_lambda_functions",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "message",
          "schema_version": 0,
          "attributes": {
            "api_id": "b1bgyojlzj",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling_strategy": "",
            "credentials_arn": "",
            "description": "Lambda example",
            "id": "rkke5o1",
            "integration_method": "POST",
            "integration_response_selection_expression": "",
            "integration_subtype": "",
            "integration_type": "AWS_PROXY",
            "integration_uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:message/invocations",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "payload_format_version": "1.0",
            "request_parameters": {},
            "request_templates": {},
            "response_parameters": [],
            "template_selection_expression": "",
            "timeout_milliseconds": 29000,
            "tls_config": []
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket",
            "aws_iam_role.iam_role_for_lambda",
            "aws_lambda_function.websocket_lambda_functions",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_apigatewayv2_route",
      "name": "connect-route",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_id": "b1bgyojlzj",
            "api_key_required": false,
            "authorization_scopes": [],
            "authorization_type": "NONE",
            "authorizer_id": "",
            "id": "6327lpp",
            "model_selection_expression": "",
            "operation_name": "",
            "request_models": {},
            "request_parameter": [
              {
                "request_parameter_key": "route.request.querystring.username",
                "required": true
              }
            ],
            "route_key": "$connect",
            "route_response_selection_expression": "",
            "target": "integrations/1o1r01p"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket",
            "aws_apigatewayv2_integration.connect-integration",
            "aws_iam_role.iam_role_for_lambda",
            "aws_lambda_function.websocket_connect_lambda",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_apigatewayv2_route",
      "name": "routes",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "default",
          "schema_version": 0,
          "attributes": {
            "api_id": "b1bgyojlzj",
            "api_key_required": false,
            "authorization_scopes": [],
            "authorization_type": "NONE",
            "authorizer_id": "",
            "id": "t4r8ast",
            "model_selection_expression": "",
            "operation_name": "",
            "request_models": {},
            "request_parameter": [],
            "route_key": "$default",
            "route_response_selection_expression": "",
            "target": "integrations/b6tv2d1"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket",
            "aws_apigatewayv2_integration.integrations",
            "aws_iam_role.iam_role_for_lambda",
            "aws_lambda_function.websocket_lambda_functions",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "disconnect",
          "schema_version": 0,
          "attributes": {
            "api_id": "b1bgyojlzj",
            "api_key_required": false,
            "authorization_scopes": [],
            "authorization_type": "NONE",
            "authorizer_id": "",
            "id": "zd8m7cm",
            "model_selection_expression": "",
            "operation_name": "",
            "request_models": {},
            "request_parameter": [],
            "route_key": "$disconnect",
            "route_response_selection_expression": "",
            "target": "integrations/ddikkb5"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket",
            "aws_apigatewayv2_integration.integrations",
            "aws_iam_role.iam_role_for_lambda",
            "aws_lambda_function.websocket_lambda_functions",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "joinGame",
          "schema_version": 0,
          "attributes": {
            "api_id": "b1bgyojlzj",
            "api_key_required": false,
            "authorization_scopes": [],
            "authorization_type": "NONE",
            "authorizer_id": "",
            "id": "5twrhsa",
            "model_selection_expression": "",
            "operation_name": "",
            "request_models": {},
            "request_parameter": [],
            "route_key": "joinGame",
            "route_response_selection_expression": "",
            "target": "integrations/lry00uh"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket",
            "aws_apigatewayv2_integration.integrations",
            "aws_iam_role.iam_role_for_lambda",
            "aws_lambda_function.websocket_lambda_functions",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "message",
          "schema_version": 0,
          "attributes": {
            "api_id": "b1bgyojlzj",
            "api_key_required": false,
            "authorization_scopes": [],
            "authorization_type": "NONE",
            "authorizer_id": "",
            "id": "1x22f33",
            "model_selection_expression": "",
            "operation_name": "",
            "request_models": {},
            "request_parameter": [],
            "route_key": "message",
            "route_response_selection_expression": "",
            "target": "integrations/rkke5o1"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket",
            "aws_apigatewayv2_integration.integrations",
            "aws_iam_role.iam_role_for_lambda",
            "aws_lambda_function.websocket_lambda_functions",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_apigatewayv2_route_response",
      "name": "default-response",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_id": "b1bgyojlzj",
            "id": "ebghj0",
            "model_selection_expression": "",
            "response_models": {},
            "route_id": "t4r8ast",
            "route_response_key": "$default"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket",
            "aws_apigatewayv2_integration.integrations",
            "aws_apigatewayv2_route.routes",
            "aws_iam_role.iam_role_for_lambda",
            "aws_lambda_function.websocket_lambda_functions",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_apigatewayv2_stage",
      "name": "dev-stage",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_log_settings": [],
            "api_id": "b1bgyojlzj",
            "arn": "arn:aws:apigateway:us-east-1::/apis/b1bgyojlzj/stages/dev",
            "auto_deploy": false,
            "client_certificate_id": "",
            "default_route_settings": [
              {
                "data_trace_enabled": false,
                "detailed_metrics_enabled": false,
                "logging_level": "OFF",
                "throttling_burst_limit": 5,
                "throttling_rate_limit": 2
              }
            ],
            "deployment_id": "361mu7",
            "description": "",
            "execution_arn": "arn:aws:execute-api:us-east-1:891377152062:b1bgyojlzj/dev",
            "id": "dev",
            "invoke_url": "wss://b1bgyojlzj.execute-api.us-east-1.amazonaws.com/dev",
            "name": "dev",
            "route_settings": [],
            "stage_variables": {},
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket",
            "aws_apigatewayv2_deployment.websocket-deployment",
            "aws_apigatewayv2_integration.connect-integration",
            "aws_apigatewayv2_integration.integrations",
            "aws_apigatewayv2_route.connect-route",
            "aws_apigatewayv2_route.routes",
            "aws_iam_role.iam_role_for_lambda",
            "aws_lambda_function.websocket_connect_lambda",
            "aws_lambda_function.websocket_lambda_functions",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "lambda_manage_connections_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::891377152062:policy/LambdaManageConnectionsPolicy",
            "attachment_count": 1,
            "description": "Allows Lambda to manage WebSocket connections via API Gateway",
            "id": "arn:aws:iam::891377152062:policy/LambdaManageConnectionsPolicy",
            "name": "LambdaManageConnectionsPolicy",
            "name_prefix": "",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":\"execute-api:ManageConnections\",\"Effect\":\"Allow\",\"Resource\":\"arn:aws:execute-api:us-east-1:891377152062:b1bgyojlzj/dev/POST/@connections/*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA47CRX6A7PLRRQMQWY",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "iam_role_for_lambda",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::891377152062:role/lambda_invoke_role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-08-25T23:25:27Z",
            "description": "",
            "force_detach_policies": false,
            "id": "lambda_invoke_role",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::891377152062:policy/LambdaManageConnectionsPolicy",
              "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
            ],
            "max_session_duration": 3600,
            "name": "lambda_invoke_role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROA47CRX6A7LBHV7IN6E"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "invoke_lambda_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "lambda_invoke_role-20240825232529107200000001",
            "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
            "role": "lambda_invoke_role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.iam_role_for_lambda"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "lambda_role_manage_connections_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "lambda_invoke_role-20240825232529814500000009",
            "policy_arn": "arn:aws:iam::891377152062:policy/LambdaManageConnectionsPolicy",
            "role": "lambda_invoke_role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket",
            "aws_iam_policy.lambda_manage_connections_policy",
            "aws_iam_role.iam_role_for_lambda"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "lambda_functions",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "auth",
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:891377152062:function:auth",
            "code_sha256": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": null,
            "function_name": "auth",
            "handler": "org.example.handlers.auth.AuthHandler::handleRequest",
            "id": "auth",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:auth/invocations",
            "kms_key_arn": "",
            "last_modified": "2024-09-07T23:17:11.000+0000",
            "layers": [],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/auth",
                "system_log_level": ""
              }
            ],
            "memory_size": 1536,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:891377152062:function:auth:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:auth:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::891377152062:role/lambda_invoke_role",
            "runtime": "java17",
            "s3_bucket": "lambda-mutual-wahoo",
            "s3_key": "chess.jar",
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "source_code_size": 25640460,
            "tags": {},
            "tags_all": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_iam_role.iam_role_for_lambda",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ]
        },
        {
          "index_key": "login",
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:891377152062:function:login",
            "code_sha256": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": null,
            "function_name": "login",
            "handler": "org.example.handlers.login.LoginHandler::handleRequest",
            "id": "login",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:login/invocations",
            "kms_key_arn": "",
            "last_modified": "2024-09-07T23:17:11.000+0000",
            "layers": [],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/login",
                "system_log_level": ""
              }
            ],
            "memory_size": 1536,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:891377152062:function:login:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:login:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::891377152062:role/lambda_invoke_role",
            "runtime": "java17",
            "s3_bucket": "lambda-mutual-wahoo",
            "s3_key": "chess.jar",
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "source_code_size": 25640460,
            "tags": {},
            "tags_all": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_iam_role.iam_role_for_lambda",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ]
        },
        {
          "index_key": "logout",
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:891377152062:function:logout",
            "code_sha256": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": null,
            "function_name": "logout",
            "handler": "org.example.handlers.logout.LogoutHandler::handleRequest",
            "id": "logout",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:logout/invocations",
            "kms_key_arn": "",
            "last_modified": "2024-09-07T23:17:11.000+0000",
            "layers": [],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/logout",
                "system_log_level": ""
              }
            ],
            "memory_size": 1536,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:891377152062:function:logout:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:logout:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::891377152062:role/lambda_invoke_role",
            "runtime": "java17",
            "s3_bucket": "lambda-mutual-wahoo",
            "s3_key": "chess.jar",
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "source_code_size": 25640460,
            "tags": {},
            "tags_all": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_iam_role.iam_role_for_lambda",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ]
        },
        {
          "index_key": "register",
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:891377152062:function:register",
            "code_sha256": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": null,
            "function_name": "register",
            "handler": "org.example.handlers.register.RegisterHandler::handleRequest",
            "id": "register",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:register/invocations",
            "kms_key_arn": "",
            "last_modified": "2024-09-07T23:17:11.000+0000",
            "layers": [],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/register",
                "system_log_level": ""
              }
            ],
            "memory_size": 1536,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:891377152062:function:register:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:register:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::891377152062:role/lambda_invoke_role",
            "runtime": "java17",
            "s3_bucket": "lambda-mutual-wahoo",
            "s3_key": "chess.jar",
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "source_code_size": 25640460,
            "tags": {},
            "tags_all": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_iam_role.iam_role_for_lambda",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ]
        },
        {
          "index_key": "stats",
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:891377152062:function:stats",
            "code_sha256": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": null,
            "function_name": "stats",
            "handler": "org.example.handlers.stats.StatsHandler::handleRequest",
            "id": "stats",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:stats/invocations",
            "kms_key_arn": "",
            "last_modified": "2024-09-07T23:17:11.000+0000",
            "layers": [],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/stats",
                "system_log_level": ""
              }
            ],
            "memory_size": 1536,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:891377152062:function:stats:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:stats:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::891377152062:role/lambda_invoke_role",
            "runtime": "java17",
            "s3_bucket": "lambda-mutual-wahoo",
            "s3_key": "chess.jar",
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "source_code_size": 25640460,
            "tags": {},
            "tags_all": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_iam_role.iam_role_for_lambda",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "websocket_connect_lambda",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:891377152062:function:connect",
            "code_sha256": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": null,
            "function_name": "connect",
            "handler": "org.example.handlers.connect.ConnectHandler::handleRequest",
            "id": "connect",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:connect/invocations",
            "kms_key_arn": "",
            "last_modified": "2024-09-07T23:17:11.000+0000",
            "layers": [],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/connect",
                "system_log_level": ""
              }
            ],
            "memory_size": 1536,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:891377152062:function:connect:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:connect:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::891377152062:role/lambda_invoke_role",
            "runtime": "java17",
            "s3_bucket": "lambda-mutual-wahoo",
            "s3_key": "chess.jar",
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "source_code_size": 25640460,
            "tags": {},
            "tags_all": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_iam_role.iam_role_for_lambda",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "websocket_lambda_functions",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "default",
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:891377152062:function:default",
            "code_sha256": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": null,
            "function_name": "default",
            "handler": "org.example.handlers.defaultHandler.DefaultHandler::handleRequest",
            "id": "default",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:default/invocations",
            "kms_key_arn": "",
            "last_modified": "2024-09-07T23:17:11.000+0000",
            "layers": [],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/default",
                "system_log_level": ""
              }
            ],
            "memory_size": 1536,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:891377152062:function:default:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:default:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::891377152062:role/lambda_invoke_role",
            "runtime": "java17",
            "s3_bucket": "lambda-mutual-wahoo",
            "s3_key": "chess.jar",
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "source_code_size": 25640460,
            "tags": {},
            "tags_all": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_iam_role.iam_role_for_lambda",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ]
        },
        {
          "index_key": "disconnect",
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:891377152062:function:disconnect",
            "code_sha256": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": null,
            "function_name": "disconnect",
            "handler": "org.example.handlers.disconnect.DisconnectHandler::handleRequest",
            "id": "disconnect",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:disconnect/invocations",
            "kms_key_arn": "",
            "last_modified": "2024-09-07T23:17:11.000+0000",
            "layers": [],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/disconnect",
                "system_log_level": ""
              }
            ],
            "memory_size": 1536,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:891377152062:function:disconnect:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:disconnect:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::891377152062:role/lambda_invoke_role",
            "runtime": "java17",
            "s3_bucket": "lambda-mutual-wahoo",
            "s3_key": "chess.jar",
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "source_code_size": 25640460,
            "tags": {},
            "tags_all": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_iam_role.iam_role_for_lambda",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ]
        },
        {
          "index_key": "joinGame",
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:891377152062:function:joinGame",
            "code_sha256": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": null,
            "function_name": "joinGame",
            "handler": "org.example.handlers.joinGame.JoinGameHandler::handleRequest",
            "id": "joinGame",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:joinGame/invocations",
            "kms_key_arn": "",
            "last_modified": "2024-09-07T23:17:11.000+0000",
            "layers": [],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/joinGame",
                "system_log_level": ""
              }
            ],
            "memory_size": 1536,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:891377152062:function:joinGame:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:joinGame:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::891377152062:role/lambda_invoke_role",
            "runtime": "java17",
            "s3_bucket": "lambda-mutual-wahoo",
            "s3_key": "chess.jar",
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "source_code_size": 25640460,
            "tags": {},
            "tags_all": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_iam_role.iam_role_for_lambda",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ]
        },
        {
          "index_key": "message",
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:891377152062:function:message",
            "code_sha256": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": null,
            "function_name": "message",
            "handler": "org.example.handlers.message.MessageHandler::handleRequest",
            "id": "message",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:message/invocations",
            "kms_key_arn": "",
            "last_modified": "2024-09-07T23:17:11.000+0000",
            "layers": [],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/message",
                "system_log_level": ""
              }
            ],
            "memory_size": 1536,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:891377152062:function:message:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:891377152062:function:message:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::891377152062:role/lambda_invoke_role",
            "runtime": "java17",
            "s3_bucket": "lambda-mutual-wahoo",
            "s3_key": "chess.jar",
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "5W3HUhz+lZwlO4ywXwdlIRVGC21Cq5K1hoEB7Oi628k=",
            "source_code_size": 25640460,
            "tags": {},
            "tags_all": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_iam_role.iam_role_for_lambda",
            "aws_s3_bucket.lambda_bucket",
            "aws_s3_object.project_jar",
            "random_pet.lambda_bucket_name"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "connect_lambda_permission",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "connect",
            "function_url_auth_type": null,
            "id": "terraform-20240825232529293500000002",
            "principal": "apigateway.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-east-1:891377152062:b1bgyojlzj/dev/$connect",
            "statement_id": "terraform-20240825232529293500000002",
            "statement_id_prefix": "terraform-"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "lambda_permission",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "auth",
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "auth",
            "function_url_auth_type": null,
            "id": "terraform-20240904020256455300000001",
            "principal": "apigateway.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-east-1:891377152062:y6xko0b5hj/*",
            "statement_id": "terraform-20240904020256455300000001",
            "statement_id_prefix": "terraform-"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_rest_api.rest_api"
          ]
        },
        {
          "index_key": "login",
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "login",
            "function_url_auth_type": null,
            "id": "terraform-20240825232529664200000008",
            "principal": "apigateway.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-east-1:891377152062:y6xko0b5hj/*",
            "statement_id": "terraform-20240825232529664200000008",
            "statement_id_prefix": "terraform-"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_rest_api.rest_api"
          ]
        },
        {
          "index_key": "logout",
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "logout",
            "function_url_auth_type": null,
            "id": "terraform-20240825232529663700000006",
            "principal": "apigateway.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-east-1:891377152062:y6xko0b5hj/*",
            "statement_id": "terraform-20240825232529663700000006",
            "statement_id_prefix": "terraform-"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_rest_api.rest_api"
          ]
        },
        {
          "index_key": "register",
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "register",
            "function_url_auth_type": null,
            "id": "terraform-20240825232529663700000007",
            "principal": "apigateway.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-east-1:891377152062:y6xko0b5hj/*",
            "statement_id": "terraform-20240825232529663700000007",
            "statement_id_prefix": "terraform-"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_rest_api.rest_api"
          ]
        },
        {
          "index_key": "stats",
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "stats",
            "function_url_auth_type": null,
            "id": "terraform-20240907222302357600000001",
            "principal": "apigateway.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-east-1:891377152062:y6xko0b5hj/*",
            "statement_id": "terraform-20240907222302357600000001",
            "statement_id_prefix": "terraform-"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_rest_api.rest_api"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "lambda_ws_permission",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "default",
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "default",
            "function_url_auth_type": null,
            "id": "terraform-20240825232529293500000003",
            "principal": "apigateway.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-east-1:891377152062:b1bgyojlzj/dev/$default",
            "statement_id": "terraform-20240825232529293500000003",
            "statement_id_prefix": "terraform-"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket"
          ]
        },
        {
          "index_key": "disconnect",
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "disconnect",
            "function_url_auth_type": null,
            "id": "terraform-20240825232529294000000005",
            "principal": "apigateway.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-east-1:891377152062:b1bgyojlzj/dev/$disconnect",
            "statement_id": "terraform-20240825232529294000000005",
            "statement_id_prefix": "terraform-"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket"
          ]
        },
        {
          "index_key": "joinGame",
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "joinGame",
            "function_url_auth_type": null,
            "id": "terraform-20240827010404385900000001",
            "principal": "apigateway.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-east-1:891377152062:b1bgyojlzj/dev/joinGame",
            "statement_id": "terraform-20240827010404385900000001",
            "statement_id_prefix": "terraform-"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket"
          ]
        },
        {
          "index_key": "message",
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "message",
            "function_url_auth_type": null,
            "id": "terraform-20240825232529294000000004",
            "principal": "apigateway.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-east-1:891377152062:b1bgyojlzj/dev/message",
            "statement_id": "terraform-20240825232529294000000004",
            "statement_id_prefix": "terraform-"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_apigatewayv2_api.chess-websocket"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "lambda_bucket",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": null,
            "arn": "arn:aws:s3:::lambda-mutual-wahoo",
            "bucket": "lambda-mutual-wahoo",
            "bucket_domain_name": "lambda-mutual-wahoo.s3.amazonaws.com",
            "bucket_prefix": "",
            "bucket_regional_domain_name": "lambda-mutual-wahoo.s3.us-east-1.amazonaws.com",
            "cors_rule": [],
            "force_destroy": true,
            "grant": [
              {
                "id": "6612752e1f601896e0dcda2681fb61c010e3f0a0148a38cad63105f93d52ea74",
                "permissions": [
                  "FULL_CONTROL"
                ],
                "type": "CanonicalUser",
                "uri": ""
              }
            ],
            "hosted_zone_id": "Z3AQBSTGFYJSTF",
            "id": "lambda-mutual-wahoo",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "object_lock_enabled": false,
            "policy": "",
            "region": "us-east-1",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [
              {
                "rule": [
                  {
                    "apply_server_side_encryption_by_default": [
                      {
                        "kms_master_key_id": "",
                        "sse_algorithm": "AES256"
                      }
                    ],
                    "bucket_key_enabled": false
                  }
                ]
              }
            ],
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "random_pet.lambda_bucket_name"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_s3_bucket_public_access_block",
      "name": "lambda_bucket",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "block_public_acls": true,
            "block_public_policy": true,
            "bucket": "lambda-mutual-wahoo",
            "id": "lambda-mutual-wahoo",
            "ignore_public_acls": true,
            "restrict_public_buckets": true
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_s3_bucket.lambda_bucket",
            "random_pet.lambda_bucket_name"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_s3_object",
      "name": "project_jar",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acl": null,
            "arn": "arn:aws:s3:::lambda-mutual-wahoo/chess.jar",
            "bucket": "lambda-mutual-wahoo",
            "bucket_key_enabled": false,
            "cache_control": "",
            "checksum_algorithm": null,
            "checksum_crc32": "",
            "checksum_crc32c": "",
            "checksum_sha1": "",
            "checksum_sha256": "",
            "content": null,
            "content_base64": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "jar",
            "etag": "f721c5e0c7bf73ab4248aa31a1df94e1-5",
            "force_destroy": false,
            "id": "chess.jar",
            "key": "chess.jar",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "override_provider": [],
            "server_side_encryption": "AES256",
            "source": "../.././target/chess-cloud-1.0-SNAPSHOT.jar",
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {},
            "tags_all": {},
            "version_id": "",
            "website_redirect": ""
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_s3_bucket.lambda_bucket",
            "random_pet.lambda_bucket_name"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_pet",
      "name": "lambda_bucket_name",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "lambda-mutual-wahoo",
            "keepers": null,
            "length": 2,
            "prefix": "lambda",
            "separator": "-"
          },
          "sensitive_attributes": [],
          "create_before_destroy": true
        }
      ]
    }
  ],
  "check_results": null
}
